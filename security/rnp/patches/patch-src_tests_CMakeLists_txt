$OpenBSD$

cmake downloads(git clone) and build google test on the build time.
here we disable this and use gtest package instead.

Index: src/tests/CMakeLists.txt
--- src/tests/CMakeLists.txt.orig
+++ src/tests/CMakeLists.txt
@@ -33,26 +33,29 @@ find_package(GnuPG 2.2 COMPONENTS gpg gpgconf)
 
 include(GoogleTest)
 
-# download and buld googletest
-configure_file(gtest-CMakeLists.txt.in googletest-download/CMakeLists.txt)
-execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
-if(result)
-  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
-endif()
-execute_process(COMMAND ${CMAKE_COMMAND} --build .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
-if(result)
-  message(FATAL_ERROR "Build step for googletest failed: ${result}")
-endif()
-# maintain compiler/linker settings on Windows
-set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
-# add to our build (provides gtest_main target)
-add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/googletest-src
-                 ${CMAKE_CURRENT_BINARY_DIR}/googletest-build
-                 EXCLUDE_FROM_ALL)
+## disable downloading and building googletest.
+## use gtest package instead.
+## 
+## # download and buld googletest
+## configure_file(gtest-CMakeLists.txt.in googletest-download/CMakeLists.txt)
+## execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
+##   RESULT_VARIABLE result
+##   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
+## if(result)
+##   message(FATAL_ERROR "CMake step for googletest failed: ${result}")
+## endif()
+## execute_process(COMMAND ${CMAKE_COMMAND} --build .
+##   RESULT_VARIABLE result
+##   WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/googletest-download )
+## if(result)
+##   message(FATAL_ERROR "Build step for googletest failed: ${result}")
+## endif()
+## # maintain compiler/linker settings on Windows
+## set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
+## # add to our build (provides gtest_main target)
+## add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/googletest-src
+##                  ${CMAKE_CURRENT_BINARY_DIR}/googletest-build
+##                  EXCLUDE_FROM_ALL)
 
 add_executable(rnp_tests
   ../rnp/rnpcfg.cpp
